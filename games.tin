#ALIAS {^mod{kill|load|reload} %S$}
{
	#nop {reload all modules};
	#if {"%0" == "modreload all"}
	{
		#script {for module in modules/*.tin ; do echo "#class {$(basename "$module" .tin)} {kill};#class {$(basename "$module" .tin)} {read} {$module}";done}
	};
	#else
	{
		#nop {Kill, load, or reload a specified module.};
		#if {"%1" == "{kill|reload}"}
		{
			#class {%2} {kill};
			#showme {Class %2 has been killed.}
		};
		#if {"%1" == "{load|reload}"}
		{
			#showme {Loading modules/%2.tin};
			#class {%2} {read} {modules/%2.tin};
			#class {gameData} {open}
		}
	}
}
{9}

#EVENT {PROGRAM START}
{
	#script {separator} {for i in $(seq 1 $(tput cols));do echo -n '-';done};
	#variable {separator} {${separator[1]}};
	#nop {Set the home directory variable.};
	#script {HOME} {if [ -z "$XDG_CONFIG_HOME" ] ; then if ! [ -d "$HOME/.config/tintin-alteraeon/" ] ; then mkdir -p "$HOME/.config/tintin-alteraeon";fi;echo -n "$HOME/.config/tintin-alteraeon";else if ! [ -d "$XDG_CONFIG_HOME/tintin-alteraeon/" ] ; then mkdir -p "$XDG_CONFIG_HOME/tintin-alteraeon/";fi;echo -n "$XDG_CONFIG_HOME/tintin-alteraeon";fi};
	#variable {HOME} {${HOME[1]}};
	#replace {HOME} {-n } {};
	#system {oldSoundpackVersion=$(cat "$HOME/sounds/version.txt" 2> /dev/null) || oldSoundpackVersion=0&&mkdir -p "$HOME/sounds";newSoundpackVersion=$(curl -s "https://stormdragon.tk/downloads/aa-version.txt");if [ $oldSoundpackVersion -ne $newSoundpackVersion ]; then f="$(mktemp)"; echo "Getting latest version of the soundpack, please wait..."; curl -s "https://stormdragon.tk/downloads/aa-sounds-$newSoundpackVersion.tar.gz" > "$f"; echo "extracting soundpack..."; tar xf "$f" -C "$HOME" --overwrite; rm -f "$f";echo "$newSoundpackVersion" > "$HOME/sounds/version.txt";fi};
	#nop {Load all the .tin files in the modules directory in classes named after the module name.};
	#script {for module in modules/*.tin ; do echo "#class {$(basename "$module" .tin)} {read} {$module}";done};
	#nop {Get the date as a number, e.g. 1225 is Christmas day. Then play intros based on the date.};
	#script {introDate} {date '+%m%d'};
	#if {${introDate[1]} == 1031}
	{
		play halloween-intro
	};
	#elseif {${introDate[1]} > 1124 && ${introDate[1]} < 1200}
	{
		play thanksgiving-intro
	};
	#elseif {${introDate[1]} >= 1213 && ${introDate[1]} <= 1225}
	{
		play christmas-intro${introDate[1]}
	};
	#else
	{
		play intro
	};
	#nop {This is the only time we need the date number, so may as well clear it.};
	#unvariable {introDate};
	#nop {Get the last modified date of the news file.};
	#script {motd} {curl -sI "$MOTDURL"};
	#regexp {${motd[1]}} {HTTP/1.1 {.*} {.*}} {#variable {motdStatus} {&1}};
	#regexp {${motd[8]}} {Last-Modified: {.*}} {#variable {motdTime} {News updated &1}};
	#nop {Display intro message.};
	#system {echo "$separator";fold -w $(tput cols) -s MOTD;echo "$separator"};
	#echo {To get started type login};
	#nop {If everything went ok with the news file above, display the last time news was updated.};
	#if {$motdStatus == 200}
	{
		#echo {${motdTime}};
		#echo {To listen to it type news.};
		Add_Event ${motdTime}
	}
}

#EVENT {PROGRAM TERMINATION}
{
	#nop {Disable single track repeats for xmms2.}#if {"$bgmusic" == "true" && "$bgmPlayer" == "xmms2"}{#system {xmms2 server config playlist.repeat_one 0}};
	#nop {stop background music, if playing.}#if {"$bgmusic" == "true"}{#system {$bgmStop}}
}

#VARIABLE         {motd}  {}